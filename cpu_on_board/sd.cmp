	component sd is
		port (
			clk_clk                                                              : in    std_logic                     := 'X';             -- clk
			reset_reset_n                                                        : in    std_logic                     := 'X';             -- reset_n
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_cmd            : inout std_logic                     := 'X';             -- b_SD_cmd
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat            : inout std_logic                     := 'X';             -- b_SD_dat
			altera_up_sd_card_avalon_interface_0_conduit_end_b_SD_dat3           : inout std_logic                     := 'X';             -- b_SD_dat3
			altera_up_sd_card_avalon_interface_0_conduit_end_o_SD_clock          : out   std_logic;                                        -- o_SD_clock
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_chipselect  : in    std_logic                     := 'X';             -- chipselect
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_address     : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- address
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_read        : in    std_logic                     := 'X';             -- read
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_write       : in    std_logic                     := 'X';             -- write
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_byteenable  : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_writedata   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_readdata    : out   std_logic_vector(31 downto 0);                    -- readdata
			altera_up_sd_card_avalon_interface_0_avalon_sdcard_slave_waitrequest : out   std_logic                                         -- waitrequest
		);
	end component sd;

